name: Build

on:
  push:
    paths:
      - .github/workflows/build.yml
      - cmake/**
      - src/**
      - CMakeLists.txt
      - env.sh

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Cache cosmocc-4.0.2
        uses: actions/cache@v4
        with:
          path: cosmocc-4.0.2
          key: ${{ runner.os }}-cosmocc-4.0.2

      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@v1.5.3
        with:
          packages: ninja-build cmake unzip wget
          version: 1.0

      - name: Build and run
        run: |
          set -Eeuo pipefail
          # Set up Cosmopolitan toolchain in PATH
          source env.sh

          # Configure and build with Ninja
          mkdir -p build
          cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../cmake/cosmo.cmake
          ninja

      - name: Upload z_pdb
        uses: actions/upload-artifact@v4
        with:
          name: z_pdb
          path: build/src/z_pdb

  test-linux:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download z_pdb
        uses: actions/download-artifact@v5
        with:
          name: z_pdb

      - name: Test
        run: |
          set -Eeuo pipefail
          
          echo abc | ./z_pdb write
          content=$(./z_pdb print)
          if [[ "$content" != "abc" ]]; then
            echo "Write failed"
            exit 1
          fi

  test-macos:
    runs-on: macos-latest
    needs: build
    steps:
      - name: Download z_pdb
        uses: actions/download-artifact@v5
        with:
          name: z_pdb

      - name: Test
        run: |
          set -Eeuo pipefail
          
          echo abc | ./z_pdb write
          content=$(./z_pdb print)
          if [[ "$content" != "abc" ]]; then
            echo "Write failed"
            exit 1
          fi

  test-windows:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download z_pdb
        uses: actions/download-artifact@v5
        with:
          name: z_pdb

      - name: Rename z_pdb to z_pdb.exe
        run: Rename-Item -Path "z_pdb" -NewName "z_pdb.exe"

      - name: Test
        run: |
          "abc" | ./z_pdb write
          $content = ./z_pdb print
          if ($content.Trim() -ne "abc") {
            Write-Host "Write failed"
            exit 1
          }
